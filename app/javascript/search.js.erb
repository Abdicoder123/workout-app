
document.addEventListener('DOMContentLoaded', () => {
  const form = document.querySelector('#search');
  const input = document.querySelector('#search-input');
  const resultsContainer = document.querySelector('#results-container');

  const API_URL = 'https://wger.de/api/v2/exerciseinfo/';
  const LIMIT = 20;

  async function featchExercises() {
    let allExercises = [];
    let offset = 0;
    let hasMore = true;

    try {
      while (hasMore) {
        const response = await fetch(`${API_URL}?limit=${LIMIT}&offset=${offset}`, {
          headers: {
            'Authorization': `Token ${window.API_KEY}`,
            'Accept': 'application/json'
          }
        });

        if (!response.ok) {
          throw new Error('Failed to fetch results from the Wger API.');
        }
        const data = await response.json();
        allExercises = allExercises.concat(data.results);
        offset += LIMIT;
        hasMore = data.next !== null;
      }

      return allExercises;
    } catch (error) {
      console.error("Error fetching all exercises:", error);
      return [];
    }
  }

  async function postExerciseToWorkout(exercise) {
    try {
      const response = await fetch('/workouts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({
          workout: {
            name: exercise.name,
            description: exercise.description,
            muscle_group: exercise.muscles.map(muscle => muscle.name).join(', ') || 'N/A',
            equipment: exercise.equipment.map(equip => equip.name).join(', ') || 'N/A',
            category: exercise.category?.name || 'N/A'
          }
        })
      });

      if (!response.ok) {
        throw new Error('Failed to add exercise to workout.');
      }

      alert('Exercise added to workout successfully!');
    } catch (error) {
      console.error('Error adding exercise to workout:', error);
      alert('Error adding exercise to workout.');
    }
  }

  if (form) {
    form.addEventListener('submit', async (event) => {
      event.preventDefault(); 
      const query = input.value.trim().toLowerCase();

      if (!query) {
        resultsContainer.innerHTML = '<p>Please enter a search term.</p>';
        return;
      }

      try {
        const allExercises = await featchExercises();

        const filteredExercises = allExercises.filter(exercise =>
          exercise.name.toLowerCase().includes(query)
        );

        if (filteredExercises.length > 0) {
          resultsContainer.innerHTML = filteredExercises.map(exercise => `
            <div class="exercise" id="exercise-results">
              <h3>${exercise.name}</h3>
              <h4>Description</h4>
              <div>${exercise.description || 'No description available.'}</div>
              <h4>Category</h4>
              <p>${exercise.category?.name || 'No category described.'}</p>
              <h4>Muscles</h4>
              <p>${exercise.muscles.map(m => m.name).join(', ') || 'No Muscle groups available.'}</p>
              <h4>Equipment</h4>
              <p>${exercise.equipment.map(e => e.name).join(', ') || 'No Equipment provided.'}</p>
              <button class="add-to-workout" data-exercise='${JSON.stringify(exercise)}'>Add to Workout</button>
            </div>
          `).join('');
          // Attach event listeners to "Add to Workout" buttons
          document.querySelectorAll('.add-to-workout').forEach(button => {
            button.addEventListener('click', () => {
              const exercise = JSON.parse(button.getAttribute('data-exercise'));
              postExerciseToWorkout(exercise);
            });
          });
        } else {
          resultsContainer.innerHTML = `<p>No exercises found for "${query}".</p>`;
        }
      } catch (error) {
        resultsContainer.innerHTML = `<p>Error: ${error.message}</p>`;
      }
    });
  }
});
